# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
 
  networking.hostName = "nixos-ravage"; # Define your hostname.

 imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
      ("/etc/nixos/14APH8/default.nix")
    ];
  
  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usbhid" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b4a6a2b5-e2f9-4502-8d68-5c77190ba00f";
      fsType = "ext4";
    };

  #boot.initrd.luks.devices."luks-8628814e-2103-48a3-bfb8-a439e23c7e92".device = "/dev/disk/by-uuid/8628814e-2103-48a3-bfb8-a439e23c7e92";  
  boot.initrd.luks.devices."luks-ea7427f8-5e76-4765-ac55-579b059f0bfa".device = "/dev/disk/by-uuid/ea7427f8-5e76-4765-ac55-579b059f0bfa";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E2CC-3CC9";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/72c6e9b3-00b1-488b-be95-681e5e40a536"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;



/*	prime = { 
		amdgpuBusId = "PCI:01:00:0";
		nvidiaBusId = "PCI:06:00:0";
		#sync.enable = true;
		offload = {
			enable = true;
			enableOffloadCmd = true;
		};
	};
*/

	/*hardware.nvidia = {
  package = config.boot.kernelPackages.nvidiaPackages.mkDriver {
    # This is the latest driver with the CVE patches + explicit sync
    version = "555.52.04";
    sha256_64bit = "sha256-nVOubb7zKulXhux9AruUTVBQwccFFuYGWrU1ZiakRAI=";
    sha256_aarch64 = "sha256-Kt60kTTO3mli66De2d1CAoE3wr0yUbBe7eqCIrYHcWk=";
    openSha256 = "sha256-wDimW8/rJlmwr1zQz8+b1uvxxxbOf3Bpk060lfLKuy0=";
    settingsSha256 = "sha256-PMh5efbSEq7iqEMBr2+VGQYkBG73TGUh6FuDHZhmwHk=";
    persistencedSha256 = "sha256-KAYIvPjUVilQQcD04h163MHmKcQrn2a8oaXujL2Bxro=";
  };

  # Modesetting is required for various things, you should almost never
  # run non-modesetting drivers these days
  modesetting.enable = true;
  # Power management is required to get nvidia GPUs to behave on
  # suspend, due to firmware bugs. Aren't nvidia great?
  powerManagement.enable = true;
  # powerManagement.finegrained only makes sense if you have a multi-gpu setup
  # nvidiaSettings is enabled by default anyway
  # The open driver is recommended even by nvidia these days
  #open = true;
  open = lib.mkOverride 990 (nividiaPackage ? open && nividiaPackage ? firmware);
	prime = { 
		amdgpuBusId = "PCI:01:00:0";
		nvidiaBusId = "PCI:06:00:0";
		#sync.enable = true;
		offload = {
			enable = true;
			enableOffloadCmd = true;
		};
	};

};

# Without this you won't be using nvidia's semi-proprietary driver,
# but the very slow nouveau
services.xserver.videoDrivers = ["nvidia"];
*/

/*environment.variables = {
  GDK_SCALE = "2";
  XCURSOR_SIZE = "32";
};*/

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
